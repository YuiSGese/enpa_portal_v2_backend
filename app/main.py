# -*- coding: utf-8 -*-
from fastapi import FastAPI
from app.core.logger import logger
# Gi·∫£ s·ª≠ settings ƒë∆∞·ª£c import t·ª´ ƒë√¢y
# from app.core.config import settings
# --- T·∫°m th·ªùi comment out settings n·∫øu ch∆∞a d√πng ---

# Import c√°c router
from app.api.routes import user_route # Router user hi·ªán c√≥
from app.tool03.api import router as tool03_api_router # Router m·ªõi cho Tool 03
# Import c√°c router kh√°c n·∫øu c√≥ (v√≠ d·ª•: tool04_router...)

# T·∫°m th·ªùi g√°n gi√° tr·ªã c·ª©ng n·∫øu settings ch∆∞a s·∫µn s√†ng
APP_NAME = "Enpa Portal V2 API" # settings.APP_NAME
APP_ENV = "development" # settings.APP_ENV

app = FastAPI(title=APP_NAME) # S·ª≠ d·ª•ng bi·∫øn t·∫°m

# Include c√°c router
app.include_router(user_route.router)
app.include_router(tool03_api_router.router)
# app.include_router(tool04_api_router.router) # N·∫øu c√≥ router tool04

@app.on_event("startup")
async def startup_event():
    # S·ª≠ d·ª•ng bi·∫øn t·∫°m
    logger.info(f"üöÄ {APP_NAME} is starting in {APP_ENV} mode")

@app.get("/")
async def root():
    # S·ª≠ d·ª•ng bi·∫øn t·∫°m
    return {"message": f"{APP_NAME} backend is running üöÄ"}

# C√°c middleware, exception handlers... c·ªßa b·∫°n c√≥ th·ªÉ ƒë·∫∑t ·ªü ƒë√¢y

